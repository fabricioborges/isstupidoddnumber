import NumberServiver from '../../src/services/NumberService';

describe('testes com números aleatórios', () => {
    it('deveria retornar se o numero é impar', () => {
        const service = new NumberServiver();

        const number = '1357'

        const result = service.isStupidOddNumber(number);

        expect(result).toBeTruthy();
    })

    it('deveria retornar falso se o numero não é impar', () => {
        const service = new NumberServiver();

        const number = '1358'

        const result = service.isStupidOddNumber(number);

        expect(result).toBeFalsy();
    })

    it('deveria retornar falso se o numero for menor que 10', () => {
        const service = new NumberServiver();

        const number = '9'

        const result = service.isStupidOddNumber(number);

        expect(result).toBeFalsy();
    })

    it('deveria retornar falso se o numero tiver mais que 1000 caracteres', () => {
        const service = new NumberServiver();

        const number = `135791113151357911131513579111315135791113
        15135791113151357911131513579111315135791113151357911131513
        57911131513579111315135791113151357911131513579111315135791
        11315135791113151357911131513579111315135791113151357911131
        51357911131513579111315135791113151357911131513579111315135
        79111315135791113151357911131513579111315135791113151357911
        13151357911131513579111315135791113151357911131513579111315
        13579111315135791113151357911131513579111315135791113151357
        91113151357911131513579111315135791113151357911131513579111
        31513579111315135791113151357911131513579111315135791113151
        35791113151357911131513579111315135791113151357911131513579
        11131513579111315135791113151357911131513579111315135791113
        15135791113151357911131513579111315135791113151357911131513
        57911131513579111315135791113151357911131513579111315135791
        11315135791113151357911131513579111315135791113151357911131
        51357911131513579111315135791113151357911131513579111315135
        79111315135791113151357911131513579111315135791113151357911
        13151357911131513579111315135791113151357911131513579111315
        13579111315135791113151357911131513579111315135791113151357
        91113151357911131513579111315135791113151357911131513579111
        31513579111315135791113151357911131513579111315`;

        const result = service.isStupidOddNumber(number);

        expect(result).toBeFalsy();
    })
})